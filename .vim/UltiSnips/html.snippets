# eZ Publish

snippet ez-background-from-content "Background image from content" b
style="background-image: url('{{ ez_field_value(content, 'image').uri }}');"
endsnippet

snippet ez-raw-image-url "Raw imageurl from content" b
{{ ez_field_value(content, 'image').uri }}
endsnippet

snippet ez-translate "Translate text" b
{{ 'Contact us!'|trans }}
endsnippet

snippet render-esi-with-controller "renders a template with controller"
{{ render_esi(controller('app.controller.menu:getChildNodesAction', {
    template: 'pagelayout_header.html.twig'
})) }}
endsnippet

snippet render-view-type "render with a specific view type" b
{{ render_esi(controller('ez_content:viewAction', {
    locationId: location.id,
    contentId: content.id,
    viewType: 'blog_post'
})) }}
endsnippet

snippet ez-render-field "Render field" b
{{ ez_render_field(content, 'description') }}
endsnippet

snippet ez-render-image-field "render image field" b
{{ ez_render_field(post, 'image', {
   parameters: {
       alias: 'blog_post_line',
       class: 'img-responsive img-rounded'
   }
}) }}
endsnippet

snippet ez-loop-render "render items in loop" b
{% if ${1:blog_posts}|length() > 0 %}
    {% for ${2:item} in $1 %}
        {{ render_esi(controller('ez_content:viewAction', {
            locationId: $2.contentInfo.mainLocationId,
            contentId: $e.contentInfo.id,
            viewType: '${3:line}'
        })) }}
    {% endfor %}
{% endif %}
{% if $1.haveToPaginate() %}
    {{ pagerfanta($1, 'twitter_bootstrap3_translated', {
        routeName: location
    }) }}
{% endif %}
endsnippet

snippet ez-image-alias "get specific alias uri" b
{% set imageAlias = ez_image_alias(${1:content}.getField('${2:image_field}'), content.versionInfo, '${3:alias}') %}
<a href="{{ imageAlias.uri }}" title="{{ ez_content_name($1) }}">
    <h4>{{ ez_content_name($1) }}</h4>
    {{ ez_render_field($1, '$2', {
        parameters: {
            alias: '$3',
        }
    }) }}
    {{ ez_field_value($1, '${4:caption_field}') }}
</a>
endsnippet

# https://raw.githubusercontent.com/dspe/ez5_cheatsheet/master/eng/templates.md

snippet eZ-Retrieve-a-view-parameter "eZ Retrieve a view parameter"
{{ app.request.attributes.get( 'viewParameters' ).offset }}
endsnippet

snippet eZ-Name-of-a-content "eZ Name of a content"
{{ content.contentInfo.name }}
endsnippet

snippet eZ-Get-a-FieldType "eZ Get a FieldType"
{{ content.getField( 'url' ).value.link }}
endsnippet

snippet ez-render-field "render field"
{{ ez_render_field( content, '${2:field_identifier}' ) }}
endsnippet

snippet ez-field-value "render field"
{{ ez_field_value( content, '${2:field_identifier}' ) }}
endsnippet

snippet ez-field-empty "tests if field is empty"
ez_is_field_empty( content, "${1:field_identifier}" )
endsnippet

snippet ez_content_name "ez_content_name"
{{ ez_content_name(content) }}
endsnippet

snippet ez_field_description "ez_field_description"
{{ ez_field_description(content, "${1:field_identifier}" ) }}
endsnippet

snippet ez_field_name "ez_field_name"
{{ ez_field_name(content, "${1:field_identifier}" ) }}
endsnippet

snippet ez_file_size "onvert a number from byte to the correct suffixe"
{{ nb_bytes|ez_file_size() }}
endsnippet

snippet ez_trans_prop "ez_trans_prop"
{{ ez_trans_prop(content, "${1:field_identifier}" ) }}
endsnippet

snippet eZ-Render-a-FieldType "eZ Render a FieldType"
{{ ez_render_field( <content>, <field_name>, {
'template': 'eZDemoBundle:fields:fields.html.twig',
'lang': 'eng-GB'
} ) }}
endsnippet

snippet eZ-Render-an-image-with-variations "eZ Render an image with variations"
<img src="{{ asset( ez_image_alias( <field>, <versionInfo>, <parameter_alias> ).uri ) }}" alt="{{  <field>.value.alternativeText }}">
{* or *}
{{ ez_render_field(content, 'image', {
parameters:{ alias:'small' },
attr:{ class:'maClasse', custom_attribute:'value' }
})}}
endsnippet

snippet eZ-Render-ezbinaryfile-download-link-with-nice-file-name "eZ Render ezbinaryfile download link with nice file name"
<a href="{{ path( 'ez_legacy', { 'module_uri': 'content/download/' ~
<content>.contentInfo.id ~ '/' ~
<field>.id ~
'/version/' ~ <content>.contentInfo.currentVersionNo ~
"/file/" ~ <field>.value.fileName|escape( 'url' ) }
) }}"/>
{{ <field>.value.fileName }}
</a>
endsnippet

snippet eZ-Render-a-content-type-via-ESI "eZ Render a content type via ESI"
{{ render( controller( "ez_content:viewLocation", { "locationId": 123, "viewType": "line" }, {"strategy": "esi"} )) }}
{*
*ez_content* : service definied in service.yml
=> To use Varnish, don't forget to remove EzPublishCache from index.php
*}
endsnippet

snippet eZ-Render-a-content-type-via-Asynchronous-method "eZ Render a content type via Asynchronous method"
{{ render( controller( "ez_content:viewLocation", { "locationId": 123, "viewType": "line" }, {"strategy": "hinclude"} )) }}
{*
=> Don't forget to add hinclude.js (http://mnot.github.io/hinclude/)
*}
endsnippet

snippet eZ-Extends-viewbaseLayout "eZ Extends viewbaseLayout"
{% extends viewbaseLayout %}
{*
=> *eZ/Bundle/EzPublishCoreBundle/Resources/views/viewbase_layout.html.twig*
*}
endsnippet

snippet eZ-Url-to-legacy-module/view "eZ Url to legacy module/view"
{{ path( 'ez_legacy', { 'module_uri': 'my_modyle/my_view/(param1)/value1' } ) }}
endsnippet

snippet eZ-Link-to-content-Relative "eZ Link to content Relative"
{{ path( 'ez_urlalias', {'locationId': content.contentInfo.mainLocationId} ) }}
or
{{ path( location_object ) }}
endsnippet

snippet eZ-Absolute "eZ Absolute"
{{ url( 'ez_urlalias', {'locationId': content.contentInfo.mainLocationId} ) }}
{* or *}
{{ url( location_object ) }}
endsnippet

snippet eZ-How-to-know-if-an-user-is-authenticated "eZ How to know if an user is authenticated"
{% if app.security.token.authenticated %}
...
{% else %}
...
{% endif %}
endsnippet

snippet ezpublish.siteaccess "ezpublish.siteaccess"
ezpublish.siteaccess
endsnippet

snippet ezpublish.requestedUriString "ezpublish.requestedUriString"
ezpublish.requestedUriString
endsnippet

snippet ezpublish.systemUriString "ezpublish.systemUriString"
ezpublish.systemUriString
endsnippet

snippet ezpublish.viewParameters "ezpublish.viewParameters"
ezpublish.viewParameters
endsnippet

snippet ezpublish.viewParametersString "ezpublish.viewParametersString"
ezpublish.viewParametersString
endsnippet

snippet ezpublish.siteName "ezpublish.siteName"
ezpublish.siteName
endsnippet

snippet ezpublish.legacy "ezpublish.legacy"
ezpublish.legacy
endsnippet

## Twig

snippet twig-bl "twig block"
{% block ${1} %}
${2}
{% endblock $1 %}
endsnippet

snippet twig-js "twig javascripts"
{% javascripts
	'bundles/${1:bundle}/js/${2:path.js}'
%}
<script src="{{ asset_url  }}"></script>
{% endjavascripts %}
endsnippet

snippet twig-css "twig stylesheets"
{% stylesheets filter='cssrewrite'
	'bundles/${1:bundle}/css/${2:path.css}'
%}
<link rel="stylesheet" href="{{ asset_url  }}">
{% endstylesheets %}
endsnippet

snippet img-asset "image asset twig"
<img src="{{ asset('bundles/${1:bundle}/images/${2:path.png}') }}" alt="${3:alt}" height="${4:height}" widht="${4:width}"/>
endsnippet

snippet asset "asset twig"
asset('bundles/${1:bundle}/images/${2:path.png}') }}
endsnippet

snippet twig-if "twig if"
{% if ${1} %}
${2}
{% endif %}
endsnippet

snippet twig-for "twig for"
{% for ${1} in ${2} %}
${3}
{% endfor %}
endsnippet

snippet twig-ext "twig extends"
{% extends ${1} %}
endsnippet

snippet twig-include-with "twig include with"
{% include '${1:MyVendorMyBundle}::${2:my_template.html.twig}' with {'${3:myVar}': ${4:my_value} } %}
endsnippet

snippet ez-link-location "links from location"
<a href="{{ path( ${1:location} ) }}">${2:link text}</a>
endsnippet

snippet ez-text-linked "text linked to a location"
{{ render( controller( "ez_content:viewLocation", { "locationId": item, "viewType": "text_linked" } )) }}
endsnippet

snippet ez-link-location_id "links from location id"
<a href="{{ path( "ez_urlalias", {"locationId": ${1:locationId}} ) }}">${2:link text}</a>
endsnippet

snippet ez-link-content "links from content id"
<a href="{{ path( "ez_urlalias", {"contentId": ${1:locationId}} ) }}">${2:link text}</a>
{* Important: Links generated from a Content ID will point to its main location.  *}
endsnippet

snippet ez-field-value-if-not-empty "tests if a field exists and displays value"
{% if not ez_is_field_empty( content, "${1:field_identifier}" ) %}
{{ ez_field_value( content, '$1' ) }}
{% else %}
$0
{% endif %}
endsnippet
